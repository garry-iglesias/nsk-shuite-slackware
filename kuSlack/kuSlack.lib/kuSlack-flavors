#kuSlack-flavors
###############################################################################
# KUSTOM SLACKWARE - FLAVORS MODULE -
###############################################################################

#######################################
# KUSTOM FLAVORS Stock:
readonly KUFLAV_STOCK_FLAVORS="${SCRIPT_DIR}/flavors"

#######################################
# KUSTOM FLAVORS Layout:
readonly KUFLAV_RC_NAME='rc.flavor'
readonly KUFLAV_DEPS_NAME='flavor.dep'
readonly KUFLAV_LIVETREE_NAME='live.tree'
readonly KUFLAV_DATATREE_NAME='data.tree'
readonly KUFLAV_MODULES_NAME='rc.modules'
readonly KUFLAV_BINARIES_NAME='bin'

###############################################################################
# KUSTOM FLAVOR Context:
###############################################################################

#######################################
# $1 -> Flavors base path.
# $2 -> Flavor Name.
kuFlavor-context () {
    local flavorsRoot="$1" flavorName="$2"
    KUFLAV_NAME="$flavorName"
    KUFLAV_ROOT="${flavorsRoot}/${flavorName}"
    KUFLAV_RC="${KUFLAV_ROOT}/${KUFLAV_RC_NAME}"
    KUFLAV_DEPS="${KUFLAV_ROOT}/${KUFLAV_DEPS_NAME}"
    KUFLAV_LIVETREE="${KUFLAV_ROOT}/${KUFLAV_LIVETREE_NAME}"
    KUFLAV_DATATREE="${KUFLAV_ROOT}/${KUFLAV_DATATREE_NAME}"
    KUFLAV_MODULES="${KUFLAV_ROOT}/${KUFLAV_MODULES_NAME}"
    KUFLAV_BINARIES="${KUFLAV_ROOT}/${KUFLAV_BINARIES_NAME}"
}

#######################################
kuFlavor-context-shut () {
    unset \
	KUFLAV_NAME KUFLAV_ROOT \
	KUFLAV_RC KUFLAV_DEPS \
	KUFLAV_LIVETREE	KUFLAV_DATATREE \
	KUFLAV_MODULES KUFLAV_BINARIES
}

###############################################################################
# KUSTOM FLAVOR Lookup:
###############################################################################

#######################################
# $1 -> flavor name.
# stdout -> flavor absolute path.
kuFlavor-lookup () {
    local flavName="$1" testPath
    # Test user kustom flavors:
    testPath="${KUSLACK_FLAVORS}/${flavName}"
    if [[ -d "$testPath" ]] ; then echo "$testPath"
    else # Test stock kustom flavors:
	testPath="${KUFLAV_STOCK_FLAVORS}/${flavName}"
	[[ -d "$testPath" ]] && echo "$testPath" || :
    fi
}

###############################################################################
# KUSTOM FLAVOR Creation Wizard:
###############################################################################

#######################################
kuFlavor-defaultRC () {
    cat <<DEFAULT_FLAVOR_RC
#${KUFLAV_NAME}'s '${KUFLAV_RC_NAME}'
###############################################################################
# NoStress Kustom Slackware Flavor - ${KUFLAV_NAME} Run Commands script.
###############################################################################
# This is a BASH script snippet, injected in the kuSlack flavor generation
# script.
###############################################################################
#NOTE: This default script is automatically generated by 'kuSlack'.
# You should, obviously, adapt it to match your taste...
# A lot of it's content might be useless after a while: it's mostly a way
# to provide some examples for beginners.
###############################################################################

#echo "${KUFLAV_NAME}: kuSlack beta flavor."
######################################
# It's a good idea to parameterize the mirror root...
SLACKWARE_MIRROR_ROOT="\${SLACKWARE_MIRROR_ROOT:-/repo/mirrors/slackware}"

###############################################################################
# Setup Build informations:
###############################################################################

######################################
# Source reference Slackware repository.
#kuSlack-setSlackwareRepo "\${SLACKWARE_MIRROR_ROOT}/slackware64-14.2"
# Alternative when using KKS:
#nskks-setSlackwareRepo "\$SLACKWARE_MIRROR_ROOT" '64' '14.2'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Note: You may want to use the KOOK_REPO_ROOT variable environment
# instead of a 'hardcoded' path here. This would allow more portability
# on this flavor.
# If you use the KOOK_REPO_ROOT, you should define it
# in your 'build' environment when launching the recipe:
#
# # KOOK_REPO_ROOT='/path/to/slack'./${KUFLAV_NAME}/recipe
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

######################################
# Generated ISO parameters:
kuSlack-setApplicationID "${KUFLAV_NAME}-\$(date '+%y%m%d-%H%M%S%z')"
kuSlack-setVolumeName '${KUFLAV_NAME}'

######################################
# Generated ISO permissions:
# You may want to restrict OR make available
# the final ISO...
#kuSlack-setISOMod 0600
#kuSlack-setISOOwner 'kustomizer:kustomizer'

######################################
# Type of live image (default is installer).
# - installer is a Slackware's stock initrd based live image.
# - from scratch is to use a "virgin" live image (need to be 'installed').
#kuSlack-liveInstaller
#kuSlack-liveFromScratch

###############################################################################
# ${KUFLAV_NAME} Handler declarations:
###############################################################################
# Uncomment if you want to hook some handlers.

#kuSlack-live-handler '${KUFLAV_NAME}-liveBuild'
#kuSlack-live-setup-handler '${KUFLAV_NAME}-liveSetup'
#kuSlack-data-handler '${KUFLAV_NAME}-dataBuild'
#kuSlack-data-setup-handler '${KUFLAV_NAME}-dataSetup'
#kuSlack-post-handler '${KUFLAV_NAME}-postGen'

###############################################################################
# ${KUFLAV_NAME} Handlers:
###############################################################################

#${KUFLAV_NAME}-liveBuild () { : ; }
#${KUFLAV_NAME}-liveSetup () { : ; }
#${KUFLAV_NAME}-dataBuild () { : ; }
#${KUFLAV_NAME}-dataSetup () { : ; }
#${KUFLAV_NAME}-postGen () { : ; }

######################################
# NSKKS Base usage:
# nskks.useNoStressSetup

######################################
# What we want on the initrd "/" live fs:
# nsks.initrd.addFile 'README-${KUFLAV_NAME}-LIVE.TXT' '/'
# nsks.initrd.addDirectory "\$INITRD_ROOTINSTALL"
# nsks.initrd.cloneGit "ssh://\$REPO_GITREMOTE\$REPO_GITROOT/repo.git" "\$INITRD_ROOTINSTALL"
# nsks.initrd.addStockPackage a bash
# nsks.initrd.addStockPackage a file

######################################
# What we want on the live dvd fs:
nsks.live.addFile 'README-${KUFLAV_NAME}.TXT' '/'

# Avoid unwanted Slackware collections:
kuSlack.packages.blackListCollection "kdei"     # We don't care about internationalization...
kuSlack.packages.blackListCollection "y"        # We work here... No Games...

DEFAULT_FLAVOR_RC
}

#######################################
kuFlavor-defaultDep () {
    cat <<DEFAULT_FLAVOR_DEP
#${KUFLAV_NAME}'s '${KUFLAV_DEPS_NAME}'
###############################################################################
# NoStress Kustom Slackware Flavor - ${KUFLAV_NAME} Flavor Dependencies.
###############################################################################
# A complex flavor can depend on more simple flavors, here we set our
# flavour mix...
###############################################################################

# The NoStress Kommando Kustom Slackware Flavor, is the default basic
# flavor. Its main effect is to provide an API to easily handle stock
# slackware repository and easily 'patch' it.
NSKKS-base

DEFAULT_FLAVOR_DEP
}

#######################################
kuFlavor-defaultLiveReadme () {
    cat <<DEFAULT_LIVE_README
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ${KUFLAV_NAME} - Live directory structure.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The content of this directory (and its subdirectories) will be added to the
Kustom Slackware "Live" tree (initrd).

DEFAULT_LIVE_README
}

#######################################
kuFlavor-defaultDataReadme () {
    cat <<DEFAULT_DATA_README
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ${KUFLAV_NAME} - Data directory structure.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The content of this directory (and its subdirectories) will be added to the
Kustom Slackware "Data" tree (normal data mount).

DEFAULT_DATA_README
}

#######################################
# Initialize a Flavor. Which is create
# a new one with default templates if
# not already present, or regenerate
# default if some files are missing.
# $1 -> Flavors base path.
# $2 -> Flavor Name.
kuFlavor-init () {
    local flavorBase="$1" flavorName="$2"
    verbose-echo "kuSlack: initializing flavor [${flavorName}]..."

    # Build flavor context:
    kuFlavor-context "$flavorBase" "$flavorName"

    # Check flavor directories:
    verbose-echo "kuSlack: flavor directory: '${KUFLAV_ROOT}'..."
    nsk-checkDirs "$KUFLAV_ROOT" "$KUFLAV_MODULES" "$KUFLAV_BINARIES"

    # Generate defaults:
    nsk-default-file "$KUFLAV_RC" kuFlavor-defaultRC
    nsk-default-file "$KUFLAV_DEPS" kuFlavor-defaultDep

    # Check trees:
    if [[ ! -d "$KUFLAV_LIVETREE" ]] ; then
	mkdir -p "$KUFLAV_LIVETREE"
	nsk-default-file "${KUFLAV_LIVETREE}/README.TXT" kuFlavor-defaultLiveReadme
    fi
    if [[ ! -d "$KUFLAV_DATATREE" ]] ; then
	mkdir -p "$KUFLAV_DATATREE"
	nsk-default-file "${KUFLAV_DATATREE}/README.TXT" kuFlavor-defaultDataReadme
    fi

    # Clear flavor context:
    verbose-echo "kuSlack: Flavor [${flavorName}] initialized."
    kuFlavor-context-shut
}

###############################################################################
# KUSTOM FLAVOR Edition:
###############################################################################

#######################################
# Edit a Flavor.
# $1 -> Flavors base path.
# $2 -> Flavor Name.
kuFlavor-edit () {
    local flavorBase="$1" flavorName="$2"
    verbose-echo "kuSlack: editing flavor [${flavorName}]..."

    # Build flavor context:
    kuFlavor-context "$flavorBase" "$flavorName"

    # And edit flavor's files:
    $EDITOR "$KUFLAV_RC" "$KUFLAV_DEPS"

    # Clear flavor context:
    kuFlavor-context-shut
}

###############################################################################
# KUSTOM FLAVOR Dependencies:
###############################################################################

#######################################
# $1 -> flavor path.
kuFlavor-walkDeps () {
    local flavPath="$1"
    #echo-err "Flavor Walking: $flavPath"
    # Any dependency ?
    local flavDeps="${flavPath}/${KUFLAV_DEPS_NAME}"
    if [[ -f "$flavDeps" ]] ; then
	# Yes so clean'em:
	local cleanDeps depName depPath
	cleanDeps="$(mktemp)"
	#echo-err "cleaning source..."
	if <"$flavDeps" nsk-cleanSource >>"$cleanDeps" ; then
	    # And scan'em recursively:
	    #echo-err "scan deps..."
	    while IFS= read depName ; do
		#echo-err "dep: $depName"
		depPath="$(kuFlavor-lookup "$depName")"
		#echo-err "dep-path: $depPath"
		if [[ -n "$depPath" ]] ; then
		    # Dump this dependency:
		    echo "$depPath"
		    kuFlavor-walkDeps "$depPath"
		else nsk-error "Invalid dependency: [${depName}]."
		fi
	    done <"$cleanDeps"
	fi # else -> empty dependencies:
	rm "$cleanDeps"
    fi
    return 0
}

#######################################
# Dump flavor's dependencies.
# $1 -> Flavor name:
kuFlavor-dependencies () {
    local flavName="$1" flavPath
    flavPath="$(kuFlavor-lookup "$flavName")"
    if [[ -n "$flavPath" ]] ; then
	# Generate raw dependencies:
	local flavRawDeps flavDeps=
	flavRawDeps="$(mktemp)"
	#echo-err 'WTF ?'
	kuFlavor-walkDeps "$flavPath" >>"$flavRawDeps"
	#echo-err 'WTF ?'
	# And do the 'magick':
	<"$flavRawDeps" nsk-revfile | nsk-keepFirstInstance || :
	echo "$flavPath"
	# Clean temp raw...
	rm "$flavRawDeps"
    else nsk-error "kuSlack: Unknown flavor [${flavName}]."
    fi
}
